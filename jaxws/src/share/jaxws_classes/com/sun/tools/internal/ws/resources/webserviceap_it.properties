#
# Copyright (c) 2005, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# Usage not found. TODO Remove
#webserviceap.nestedModelError=modeler error: {0}
webserviceap.fileNotFound=errore: file non trovato: {0}
webserviceap.error=errore: {0}
webserviceap.warning=avvertenza: {0}
webserviceap.info=informazioni: {0}
webserviceap.compilationFailed=compilazione non riuscita. Gli errori dovrebbero essere stati segnalati.
webserviceap.succeeded: Operazione riuscita

webserviceap.method.not.annotated=Il metodo {0} sulla classe {1} non \u00E8 annotato.
webserviceap.rpc.encoded.not.supported=La classe {0} ha una SOAPBinding RPC/codificata. Le SOAPBinding RPC/codificate non sono supportate in JAXWS 2.0.
webservice.encoded.not.supported=La classe {0} ha un''annotazione SOAPBinding non valida. Le SOAPBinding {1}/codificate non sono supportate
webserviceap.model.already.exists=il modello esiste gi\u00E0
webserviceap.endpointinterface.on.interface=L''interfaccia endpoint del servizio\: {0} non pu\u00F2 avere un''annotazione WebService.endpointInterface\: {1}
webserviceap.java.typeNotFound=Tipo: {0} non trovato nel mapping
webserviceap.endpointinterfaces.do.not.match=L''interfaccia endpoint {0} non corrisponde all''interfaccia {1}.

# {0} - class name, {1} - number e.g.: Could not get TypeDeclaration for: foo.Bar in apt round: 2
webserviceap.could.not.find.typedecl=Impossibile ottenere TypeElement per:\ {0} nel ciclo di elaborazione dell''annotazione:\ {1}

webserviceap.no.webservice.endpoint.found=Impossibile trovare un endpoint del servizio Web

webserviceap.endpointinterface.has.no.webservice.annotation=L''interfaccia endpoint {0} deve avere un''annotazione WebService

webserviceap.oneway.operation.cannot.have.return.type=Il metodo {1} della classe {0} \u00E8 annotato con @Oneway ma ha un tipo restituito.

webserviceap.oneway.operation.cannot.have.holders=Il metodo {1} della classe {0} \u00E8 annotato con @Oneway ma contiene i parametri INOUT o OUT (javax.xml.ws.Holder)

webserviceap.oneway.operation.cannot.declare.exceptions=Il metodo {1} della classe {0} \u00E8 annotato con @Oneway ma dichiara l''eccezione {2}

webserviceap.cannot.combine.handlerchain.soapmessagehandlers=Impossibile specificare entrambe le annotazioni HanlderChain e SOAPMessageHandlers

webserviceap.invalid.handlerchain.file.nohandler-config=Il file HandlerChain {0} non \u00E8 valido poich\u00E9 non contiene un elemento handler-config

webserviceap.could.not.find.handlerchain=Impossibile trovare la catena di handler {0} nel file di handler {1}

webserviceap.handlerclass.notspecified=Un handler del file HandlerChain\: {0} non specifica un elemento handler-class

webserviceap.init_param.format.error=un elemento <init-param> deve avere esattamente 1 <param-name> e 1 <param-value>

webserviceap.document.literal.bare.method.return.not.unique=I metodi BARE document-literal devono avere una combinazione di nome risultato e tipo restituito univoca. Classe {0} metodo\: {1}, nome risultato\: {2} tipo restituito\: {3}

webserviceap.document.literal.bare.method.not.unique=I metodi BARE document-literal devono avere nomi di parametro univoci. Classe\: {0} metodo\: {1}, nome parametro\: {2}

webserviceap.document.literal.bare.cannot.have.more.than.one.out=I metodi BARE document-literal devono avere un tipo restituito o un parametro OUT. Classe\: {0} Metodo\: {1}

webserviceap.document.literal.bare.must.have.only.one.in.parameter=I metodi BARE document-literal non devono avere pi\u00F9 di 1 parametro IN non di intestazione. Classe\: {0} metodo\: {1}, numero di parametri non di intestazione\: {2}

webserviceap.document.literal.bare.must.have.one.in.or.out=I metodi BARE document-literal devono avere almeno uno dei seguenti elementi: tipo restituito, parametro IN o parametro OUT. Classe\: {0} Metodo\: {1}

webserviceap.holder.parameters.must.not.be.in.only=I parametri javax.xml.ws.Holder non devono essere annotati con la propriet\u00E0 WebParam.Mode.IN. Classe\: {0} metodo\: {1} parametro\: {2}

webserviceap.document.bare.holder.parameters.must.not.be.inout=I parametri javax.xml.ws.Holder nelle operazioni BARE document devono essere WebParam.Mode.INOUT. Classe\: {0} metodo\: {1} parametro\: {2}

webserviceap.endpointinterface.class.not.found=Impossibile trovare la classe endpointInterface {0}

webserviceap.sei.cannot.contain.constant.values=Un''interfaccia endpoint del servizio non pu\u00F2 contenere una dichiarazione della costante\: Interfaccia\: {0} campo\: {1}.

webserviceap.method.return.type.cannot.implement.remote=I tipi restituiti del metodo non possono implementare java.rmi.Remote. Classe\: {0} metodo\: {1} tipo restituito\: {2}

webserviceap.method.parameter.types.cannot.implement.remote=I tipi di parametro del metodo non possono implementare java.rmi.Remote. Classe\: {0} metodo\: {1} parametro\: {2} tipo\: {3}

webserviceap.operation.name.not.unique=I nomi delle operazioni devono essere univoci. Classe\: {0} metodo\: {1} nome operazione\: {2}

webserviceap.method.request.wrapper.bean.name.not.unique=I nomi di bean wrapper di richiesta devono essere univoci e non devono essere in conflitto con le altre classi generate. Classe\: {0} metodo {1}

webserviceap.method.response.wrapper.bean.name.not.unique=I nomi di bean wrapper di risposta devono essere univoci e non devono essere in conflitto con le altre classi generate. Classe\: {0} metodo {1}

webserviceap.method.exception.bean.name.not.unique=I nomi di bean di eccezione devono essere univoci e non devono essere in conflitto con le altre classi generate. Classe\: {0} eccezione {1}

webserviceap.rpc.literal.parameters.must.have.webparam=Tutti i parametri RPC-literal devono avere un''annotazione WebParam. Classe\: {0} metodo\: {1} parametro {2}

webserviceap.rpc.literal.webparams.must.specify.name=Tutti i WebParams RPC-literal devono specificare un nome. Classe\: {0} metodo\: {1} parametro {2}

webserviceap.rpc.literal.must.not.be.bare=Tutte le SOAPBindings RPC-literal devono avere parameterStyle WRAPPED. Classe\: {0}.

webserviceap.header.parameters.must.have.webparam.name=Tutte le annotazioni WebParam sui parametri dell''intestazione devono specificare un nome. Classe\: {0} metodo\: {1} parametro {2}

webserviceap.failed.to.find.handlerchain.file=Impossibile trovare il file HandlerChain. Classe\: {0}, file:\ {1}

webserviceap.failed.to.parse.handlerchain.file=Analisi del file HandlerChain non riuscita. Classe\: {0}, file:\ {1}

webserviceap.class.not.found=Classe non trovata: {0}

webserviceap.rpc.soapbinding.not.allowed.on.method=Le annotazioni di associazione SOAPBinding.Style.RPC non sono consentite sui metodi. Classe\: {0} Metodo\: {1}

webserviceap.mixed.binding.style=La classe\: {0} contiene associazioni miste. SOAPBinding.Style.RPC e SOAPBinding.Style.DOCUMENT non posso essere mischiati.

webserviceap.endpointinteface.plus.annotation=Impossibile usare l''annotazione @{0} con l''elemento @javax.jws.WebService.endpointInterface.

webserviceap.endpointinteface.plus.element=Impossibile usare l''elemento @javax.jws.WebService.{0} con l''elemento @javax.jws.WebService.endpointInterface.

webserviceap.non.in.parameters.must.be.holder=La classe:\ {0}, metodo: {1}, parametro: {2} non \u00E8 WebParam.Mode.IN e non \u00E8 di tipo javax.xml.ws.Holder.

webserviceap.invalid.sei.annotation.element=Impossibile specificare l''elemento @javax.jws.WebService.{0} su un''interfaccia endpoint del servizio. Classe\: {1}

webserviceap.invalid.sei.annotation=Impossibile usare l''annotazione @{0} su un''interfaccia endpoint del servizio. Classe\: {1}

webserviceap.invalid.sei.annotation.element.exclude=Impossibile usare @javax.jws.WebMethod({0}) su un''interfaccia endpoint del servizio. Classe\: {1} metodo\: {2}

webserviceap.invalid.webmethod.element.with.exclude=L''elemento @javax.jws.WebMethod.{0} non pu\u00F2 essere specificato con l''elemento @javax.jws.WebMethod.exclude. Classe\: {1} metodo\: {2}

webserviceap.doc.bare.no.out=I metodi BARE document-literal senza tipo restituito o parametri OUT/INOUT devono essere annotati come @Oneway. Classe\: {0}, metodo: {1}
webserviceap.doc.bare.return.and.out=I metodi BARE document-literal non possono avere un tipo restituito e parametri OUT. Classe\: {0}, metodo: {1}
webserviceap.oneway.and.out=I metodi @Oneway non possono avere parametri OUT. Classe\: {0} metodo: {1}

webserviceap.webservice.class.not.public=Le classi annotate con @javax.jws.WebService devono essere pubbliche. Classe\: {0}

webserviceap.webservice.class.is.final=Le classi annotate con @javax.jws.WebService non devono essere finali. Classe\: {0}

webserviceap.webservice.class.is.abstract=Le classi annotate con @javax.jws.WebService non devono essere astratte. Classe\: {0}

webserviceap.webservice.class.is.innerclass.not.static=Le classi interne annotate con @javax.jws.WebService devono essere statiche. Classe\: {0}

webserviceap.webservice.method.is.abstract=Le classi annotate con @javax.jws.WebService non devono avere metodi astratti. Classe\: {0} Metodo: {1}

webserviceap.webservice.method.is.static.or.final=I metodi annotati con @javax.jws.WebMethod non devono essere statici o finali. Classe\: {0} Metodo: {1}

#webserviceap.doc.bare.return.and.out=Document literal bare methods must not have a return value and an OUT/INOUT parameter.  Class\: {0} Method\: {1}

webserviceap.webservice.no.default.constructor=Le classi annotate con @javax.jws.WebService devono avere un costruttore predefinito pubblico. Classe\: {0}

webserviceap.oneway.and.not.one.in=I metodi BARE document-literal annotati con @javax.jws.Oneway devono avere un parametro IN non di intestazione. Classe\: {0} Metodo\: {1}

webserviceap.doc.bare.no.return.and.no.out=I metodi BARE document-literal che non hanno un tipo restituito devono avere un singolo parametro OUT/INOUT. Classe\: {0} Metodo\: {1}

webserviceap.doc.bare.and.no.one.in=I metodi BARE document-literal devono avere un parametro IN/INOUT non di intestazione. Classe\: {0} Metodo\: {1}

webserviceap.method.not.implemented=I metodi di un endpointInterface devono essere implementati nella classe di implementazione. Classe interfaccia\:{0} Classe implementazione\:{1} Metodo\: {2}

webserviceap.no.package.class.must.have.targetnamespace=Le classi annotate @javax.jws.Webservice che non appartengono a un package devono avere l''elemento @javax.jws.Webservice.targetNamespace. Classe\: {0}

webserviceap.webservice.and.webserviceprovider=Le classi non possono essere annotate sia con @javax.jws.WebService che con @javax.xml.ws.WebServiceProvider. Classe\: {0}

webserviceap.invalid.soapbinding.parameterstyle= Uso errato dell''annotazione {0} su {1}. ParameterStyle pu\u00F2 essere solo WRAPPED con il servizio Web dello stile RPC.
