#
# Copyright (c) 2005, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

localized.error={0}
parsing.wsdlNotDefaultNamespace=default namespace must be \"{0}\"
# Not concatenated with any other string.
parsing.onlyOneOfElementOrTypeRequired=only one of the \"element\" or \"type\" attributes is allowed in part \"{0}\"
# Not concatenated with any other string.
parsing.elementOrTypeRequired=warning: part {0} is ignored, either the \"element\" or the \"type\" attribute is required in part \"{0}\"
parsing.invalidElement=invalid element: \"{0}\" (in namespace \"{1}\")
parsing.invalidAttributeValue=invalid value \"{1}\" for attribute \"{0}\"
parsing.invalidExtensionElement=invalid extension element: \"{0}\" (in namespace \"{1}\")
parsing.invalidWsdlElement=invalid WSDL element: \"{0}\"
parsing.requiredExtensibilityElement=unknown required extensibility element \"{0}\" (in namespace \"{1}\")
parsing.unknownExtensibilityElementOrAttribute=unknown extensibility element or attribute \"{0}\" (in namespace \"{1}\")
parsing.tooManyElements=too many \"{0}\" elements under \"{1}\" element \"{2}\"
parsing.invalidOperationStyle=operation \"{0}\" has an invalid style
# {0} - "definitions". Not concatenated with any other string.
parsing.onlyOneTypesAllowed=only one "types" element allowed in "{0}"
# {0} - element local name (e.g. PingType). Wrapped into an Exception. Not concatenated with any other string.
parsing.onlyOneDocumentationAllowed=only one "documentation" element allowed in "{0}"
parsing.incorrectRootElement=expected root element \"{2}\" (in namespace \"{3}\"), found element \"{0}\" (in namespace \"{1}\")
parsing.unknownImportedDocumentType=imported document is of unknown type: {0}
# Not concatenated with any other string.
parsing.unknownNamespacePrefix=undeclared namespace prefix: \"{0}\"
parsing.invalidURI=invalid URI: {0}
# {0} - WSDL URL
parsing.ioExceptionWithSystemId=failed to parse document at \"{0}\"
# {0} - exception message
parsing.ioException=parsing failed: {0}
# {0} - WSDL URL, Not concatenated with any other string.
parsing.saxExceptionWithSystemId=invalid WSDL file! failed to parse document at \"{0}\"
# {0} - exception message, Not concatenated with any other string.
parsing.saxException=invalid WSDL file! parsing failed: {0}
# {0} - exception message, Not concatenated with any other string.
parsing.parserConfigException=invalid WSDL file! parsing failed: {0}
# {0} - exception message, Not concatenated with any other string.
parsing.factoryConfigException=invalid WSDL file! parsing failed: {0}

# Wrapped into an Exception. Not concatenated with any other string.
parsing.missingRequiredAttribute=missing required attribute \"{1}\" of element \"{0}\"
parsing.invalidTag=expected element \"{1}\", found \"{0}\"
# {4} - element name
parsing.invalidTagNS=Invalid WSDL at {4}: expected element \"{2}\" (in namespace \"{3}\"), found element \"{0}\" (in namespace \"{1}\")
parsing.nonWhitespaceTextFound=found unexpected non-whitespace text: \"{0}\"
# Not concatenated with any other string (written on a separate line).
parsing.elementExpected=unexpected non-element found
#
entity.duplicate=duplicate entity: \"{0}\"
# {0} - type of entity, {1} - entity name e.g.: duplicate "message" entity: "PingRequest", Wrapped into an Exception. Not concatenated with any other string.
entity.duplicateWithType=duplicate \"{0}\" entity: \"{1}\"

entity.notFoundByID=invalid entity id: \"{0}\"
entity.notFoundByQName={0} \"{1}\" not found in the wsdl: {2}
entity.notFound.portType=wsdl:portType \"{0}\" referenced by wsdl:binding \"{1}\", but it's not found in the wsdl
entity.notFound.binding=wsdl:binding \"{0}" referenced by wsdl:port \"{1}\", but it's not found in the wsdl

# Wrapped into an Exception. Not concatenated with any other string.
validation.missingRequiredAttribute=missing required attribute \"{0}\" of element \"{1}\"
validation.missingRequiredProperty=missing required property \"{0}\" of element \"{1}\"
validation.missingRequiredSubEntity=missing required sub-entity \"{0}\" of element \"{1}\"
# Wrapped into an Exception. Not concatenated with any other string.
validation.invalidElement=invalid element: \"{0}\"
# Usage not found. TODO Remove
#validation.invalidComplexTypeInElement=invalid element: \"{1}\", has named complexType: \"{0}\"
validation.invalidSimpleTypeInElement=invalid element: \"{1}\", has named simpleType: \"{0}\"
validation.duplicatedElement=duplicated element: \"{0}\"
validation.duplicatePartName=Invalid WSDL, duplicate parts in a wsdl:message is not allowed. \nwsdl:message {0} has a duplicated part name: \"{1}\"
# Wrapped into an Exception. Not concatenated with any other string.
validation.invalidSubEntity=invalid sub-element \"{0}\" of element \"{1}\"
# Wrapped into an Exception. Not concatenated with any other string.
validation.invalidAttribute=invalid attribute \"{0}\" of element \"{1}\"
validation.invalidAttributeValue=invalid value \"{1}\" for attribute \"{0}\"
# Usage not found. TODO Remove
#validation.invalidRange=invalid range found (min: {0}, max: {1})
validation.exclusiveAttributes=exclusive attributes: \"{0}\", \"{1}\"
validation.incorrectTargetNamespace=target namespace is incorrect (expected: {1}, found: {0})
# Usage not found. TODO Remove
#validation.unsupportedSchemaFeature=unsupported XML Schema feature: \"{0}\"
validation.shouldNotHappen=internal error ("{0}")
# Usage not found. TODO Remove
#validation.invalidToken=invalid token \"{0}\"
# Usage not found. TODO Remove
#validation.notSimpleType=not a simple type: \"{0}\"
validation.ambiguousName=ambiguous operation name: \"{0}\"
# Usage not found. TODO Remove
#validation.invalidPrefix=undeclared namespace prefix: \"{0}\"
# {0} - number, {1} - WSDL location e.g.: Use of SOAP Encoding is not supported. SOAP extension element on line 945 in file:/foo/bar.wsdl has use="encoded"
validation.unsupportedUse.encoded="Use of SOAP Encoding is not supported. \nSOAP extension element on line {0} in {1} has use=\"encoded\" "
# {0}, {2} - element / attribute name, {1} - element name. Not concatenated with any other string.
warning.faultEmptyAction=ignoring empty Action in \"{0}\" {1} element of \"{2}\" operation, using default instead
# Not concatenated with any other string.
warning.inputOutputEmptyAction=ignoring empty Action in {0} element of \"{1}\" operation, using default instead

#wsi compliant WSDL warnings
warning.wsi.r2001=Not a WSI-BP compliant WSDL (R2001, R2002). wsdl:import must import only WSDL documents. It's trying to import: \"{0}\"
warning.wsi.r2002=Not a WSI-BP compliant WSDL (R2002). wsdl:import must not be used to import XML Schema embedded in the WSDL document. Expected WSDL namespace: {0}, found: {1}
warning.wsi.r2003=Not a WSI-BP compliant WSDL (R2003). xsd:import must only be used inside xsd:schema elements.
warning.wsi.r2004=Not a WSI-BP compliant WSDL (R2001, R2004). xsd:import must not import XML Schema definitions embedded inline within the WSDL document.

#Parser
Parsing.ParseFailed = \
\tFailed to parse the WSDL.

Parsing.NotAWSDL=Failed to get WSDL components, probably {0} is not a valid WSDL file.

AbstractReferenceFinderImpl.UnableToParse = \
\tUnable to parse "{0}" : {1}

# Not concatenated with any other string.
Parser.NotABindingFile = \
\tnot an external binding file. The root element must be '{'http://java.sun.com/xml/ns/jaxws'}'bindings but it is '{'{0}'}'{1}


#Internalizer
Internalizer.TwoVersionAttributes = \
\tBoth jaxws:version and version are present
Internalizer.IncorrectVersion = \
\tJAXWS version attribute must be "2.0"

Internalizer.VersionNotPresent = \
\tJAXWS version attribute must be present

internalizer.targetNotAnElement= \
\tTarget node is not an element
internalizer.targetNotFound= \
\tNo target found for the wsdlLocation: {0}

Internalizer.IncorrectSchemaReference= \
\t"{0}" is not a part of this compilation. Is this a mistake for "{1}"?

internalizer.XPathEvaluationError = \
    XPath error: {0}
internalizer.XPathEvaluatesToNoTarget = \
    XPath evaluation of "{0}" results in an empty target node
internalizer.XPathEvaulatesToTooManyTargets = \
    XPath evaluation of "{0}" results in too many ({1}) target nodes
internalizer.XPathEvaluatesToNonElement = \
    XPath evaluation of "{0}" needs to result in an element.
invalid.customization.namespace=Ignoring customization: \"{0}\", because it has no namespace. It must belong to the customization namespace.

# {0} - wsdl document location, {1} - namespace and local name of a element e.g.: Not a WSDL document: http://foo.org/bar?wsdl, it gives "{http://www.w3.org/1999/xhtml}html", retrying with MEX...
invalid.wsdl.with.dooc="Not a WSDL document: {0}, it gives \"{1}\", retrying with MEX..."
invalid.wsdl=Invalid WSDL {0}, expected {1} found {2} at (line {3})
# Concatenated with: Server returned HTTP response code: {code} for URL: {url} e.g.: Server returned HTTP response code: 500 for URL: http://foo/bar/mex retrying with MEX...
try.with.mex= {0} \n\nretrying with MEX...
file.not.found={0} is unreachable
parsing.unableToGetMetadata= {0}\n\n{1}
failed.noservice=Could not find wsdl:service in the provided WSDL(s): \n\n{0} At least one WSDL with at least one service definition needs to be provided.
