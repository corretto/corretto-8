/*
 * Copyright (c) 2008, 2016, Oracle and/or its affiliates. All rights reserved.
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

@@END_COPYRIGHT@@

#include <stdio.h>
#include <errno.h>
#include <unistd.h>
#include <sys/acl.h>
#include <fcntl.h>
#include <sys/stat.h>

/* On Solaris, "sun" is defined as a macro. Undefine to make package
   declaration valid */
#undef sun

/* To be able to name the Java constants the same as the C constants without
   having the preprocessor rewrite those identifiers, add PREFIX_ to all
   identifiers matching a C constant. The PREFIX_ is filtered out in the
   makefile. */

@@START_HERE@@

package sun.nio.fs;
class SolarisConstants {

    private SolarisConstants() { }

    static final int PREFIX_O_XATTR = O_XATTR;
    static final int PREFIX__PC_XATTR_ENABLED = _PC_XATTR_ENABLED;
    static final int PREFIX__PC_ACL_ENABLED = _PC_ACL_ENABLED;
    static final int PREFIX__ACL_ACE_ENABLED = _ACL_ACE_ENABLED;
    static final int PREFIX_ACE_GETACL = ACE_GETACL;
    static final int PREFIX_ACE_SETACL = ACE_SETACL;
    static final int PREFIX_ACE_ACCESS_ALLOWED_ACE_TYPE = ACE_ACCESS_ALLOWED_ACE_TYPE;
    static final int PREFIX_ACE_ACCESS_DENIED_ACE_TYPE = ACE_ACCESS_DENIED_ACE_TYPE;
    static final int PREFIX_ACE_SYSTEM_AUDIT_ACE_TYPE = ACE_SYSTEM_AUDIT_ACE_TYPE;
    static final int PREFIX_ACE_SYSTEM_ALARM_ACE_TYPE = ACE_SYSTEM_ALARM_ACE_TYPE;
    static final int PREFIX_ACE_READ_DATA = ACE_READ_DATA;
    static final int PREFIX_ACE_LIST_DIRECTORY = ACE_LIST_DIRECTORY;
    static final int PREFIX_ACE_WRITE_DATA = ACE_WRITE_DATA;
    static final int PREFIX_ACE_ADD_FILE = ACE_ADD_FILE;
    static final int PREFIX_ACE_APPEND_DATA = ACE_APPEND_DATA;
    static final int PREFIX_ACE_ADD_SUBDIRECTORY = ACE_ADD_SUBDIRECTORY;
    static final int PREFIX_ACE_READ_NAMED_ATTRS = ACE_READ_NAMED_ATTRS;
    static final int PREFIX_ACE_WRITE_NAMED_ATTRS = ACE_WRITE_NAMED_ATTRS;
    static final int PREFIX_ACE_EXECUTE = ACE_EXECUTE;
    static final int PREFIX_ACE_DELETE_CHILD = ACE_DELETE_CHILD;
    static final int PREFIX_ACE_READ_ATTRIBUTES = ACE_READ_ATTRIBUTES;
    static final int PREFIX_ACE_WRITE_ATTRIBUTES = ACE_WRITE_ATTRIBUTES;
    static final int PREFIX_ACE_DELETE = ACE_DELETE;
    static final int PREFIX_ACE_READ_ACL = ACE_READ_ACL;
    static final int PREFIX_ACE_WRITE_ACL = ACE_WRITE_ACL;
    static final int PREFIX_ACE_WRITE_OWNER = ACE_WRITE_OWNER;
    static final int PREFIX_ACE_SYNCHRONIZE = ACE_SYNCHRONIZE;
    static final int PREFIX_ACE_FILE_INHERIT_ACE = ACE_FILE_INHERIT_ACE;
    static final int PREFIX_ACE_DIRECTORY_INHERIT_ACE = ACE_DIRECTORY_INHERIT_ACE;
    static final int PREFIX_ACE_NO_PROPAGATE_INHERIT_ACE = ACE_NO_PROPAGATE_INHERIT_ACE;
    static final int PREFIX_ACE_INHERIT_ONLY_ACE = ACE_INHERIT_ONLY_ACE;
    static final int PREFIX_ACE_SUCCESSFUL_ACCESS_ACE_FLAG = ACE_SUCCESSFUL_ACCESS_ACE_FLAG;
    static final int PREFIX_ACE_FAILED_ACCESS_ACE_FLAG = ACE_FAILED_ACCESS_ACE_FLAG;
    static final int PREFIX_ACE_IDENTIFIER_GROUP = ACE_IDENTIFIER_GROUP;
    static final int PREFIX_ACE_OWNER = ACE_OWNER;
    static final int PREFIX_ACE_GROUP = ACE_GROUP;
    static final int PREFIX_ACE_EVERYONE = ACE_EVERYONE;
}
