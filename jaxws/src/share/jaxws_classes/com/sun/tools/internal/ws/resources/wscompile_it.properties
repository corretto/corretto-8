#
# Copyright (c) 2005, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

wsimport.usage=Uso: {0} [options] <WSDL_URI>\n\nUsare "wsimport -help" per una descrizione dettagliata delle opzioni.

wsimport.help=\nUso: {0} [options] <WSDL_URI>\n\n\\dove [options] include:\n\  -b <path>                 specifica i file di associazione jaxws/jaxb o gli schemi aggiuntivi\n\                            (Ogni <path> deve avere un proprio -b)\n\  -B<jaxbOption>            passa questa opzione al compilatore dello schema JAXB\n\  -catalog <file>           specifica il file di catalogo per risolvere i riferimenti a entit\u00e0 esterne\n\                            supporta il formato di catalogo XML TR9401, XCatalog e OASIS.\n\  -d <directory>            specifica la posizione dei file di output generati\n\  -encoding <encoding>      specifica la codifica dei caratteri usata dai file di origine\n\  -extension                consente le estensioni del fornitore - funzionalit\u00e0 non specificata\n\                            dalla specifica. L''uso delle estensioni pu\u00f2\n\                            produrre applicazioni non portatili o\n\                            rendere impossibile l''interoperabilit\u00e0 con altre implementazioni\n\  -help                     visualizza la Guida\n\  -httpproxy:<host>:<port>  specifica un server proxy HTTP (il valore predefinito della porta \u00e8 8080)\n\  -keep                     conserva i file generati\n\  -p <pkg>                  specifica il package di destinazione\n\  -quiet                    elimina l''output wsimport\n\  -s <directory>            specifica la posizione dei file di origine generati\n\  -target <version>         genera il codice come per la versione della specifica JAXWS fornita\n\                            Il valore predefinito \u00e8 2.2. I valori accettati sono 2.0, 2.1 e 2.2\n\                            ad esempio, 2.0 genera il codice conforme per la specifica JAXWS 2.0\n\  -verbose                  messaggi di output relativi alle azioni del compilatore\n\  -version                  stampa le informazioni sulla versione\n\  -wsdllocation <location>  valore @WebServiceClient.wsdlLocation\n\  -clientjar <jarfile>      crea il file jar degli artifact generati insieme ai\n\                            metadati WSDL richiesti per il richiamo del servizio Web.\n\  -generateJWS              genera il file di implementazione JWS stub\n\  -implDestDir <directory>  specifica la posizione in cui generare il file di implementazione JWS\n\  -implServiceName <name>   parte locale del nome di servizio per l''implementazione JWS generata\n\  -implPortName <name>      parte locale del nome di porta per l''implementazione JWS generata

wsimport.usage.extensions=\n\\Estensioni:\n\  -XadditionalHeaders              mappa le intestazioni non associate a un messaggio di richiesta o di risposta ai \n\                                   parametri del metodo Java\n\  -Xauthfile                       file per trasportare le informazioni di autorizzazione nel formato \n\                                   http://username:password@example.org/stock?wsdl\n\  -Xdebug                          stampa le informazioni di debug\n\  -Xno-addressing-databinding      abilita l'associazione di EndpointReferenceType W3C a Java\n\  -Xnocompile                      non compila i file Java generati\n\  -XdisableAuthenticator           disabilita l'autenticatore usato da JAX-WS RI,\n\                                   l'opzione -Xauthfile viene ignorata, se impostata\n\  -XdisableSSLHostnameVerification disabilita la verifica del nome host SSL durante il recupero tramite DETCH dei\n\                                   wsdl


wsimport.usage.examples=\n\\Esempi:\n\  wsimport stock.wsdl -b stock.xml -b stock.xjb\n\  wsimport -d generated http://example.org/stock?wsdl\n

wsgen.usage=Uso: {0} [options] <SEI>\n\nUsare "wsgen -help" per una descrizione dettagliata delle opzioni.

wsgen.help=\nUso: {0} [options] <SEI>\n\n\\dove [options] include:\n\  -classpath <path>          specifica dove trovare i file della classe di input\n\  -cp <path>                 come per -classpath <path>\n\  -d <directory>             specifica la posizione dei file di output generati\n\  -encoding <encoding>       specifica la codifica dei caratteri usata dai file di origine\n\  -extension                 consente le estensioni del fornitore - funzionalit\u00e0 non specificata\n\                             dalla specifica. L''uso delle estensioni pu\u00f2\n\                            produrre applicazioni non portatili o\n\                            rendere impossibile l''interoperabilit\u00e0 con altre implementazioni\n\  -help                      visualizza la Guida\n\  -keep                      conserva i file generati\n\  -r <directory>             directory di destinazione delle risorse, specifica la\n\                             posizione dei file delle risorse, ad esempio WSDL\n\  -s <directory>             specifica la posizione dei file di origine generati\n\  -verbose                   messaggi di output relativi alle azioni del compilatore\n\  -version                   stampa le informazioni sulla versione\n\  -wsdl[:protocol]           genera un file WSDL. Il protocollo \u00e8 opzionale.\n\                             I protocolli validi sono {1},\n\                             il valore predefinito \u00e8 soap1.1.\n\                             I protocolli non standard {2}\n\                             possono essere usati solo insieme\n\                             all''opzione -extension.\n\  -inlineSchemas             schemi in linea nel WSDL generato. Devono essere\n\                             usati insieme all''opzione -wsdl.\n\  -servicename <name>        specifica il nome del servizio da usare nel WSDL generato\n\                             Deve essere usato insieme all''opzione -wsdl.\n\  -portname <name>           specifica il nome della porta da usare nel WSDL generato\n\                             Deve essere usato insieme all''opzione -wsdl.


wsgen.usage.examples=\n\\Esempi:\n\  wsgen -cp . example.Stock\n\  wsgen -cp . example.Stock -wsdl -servicename '{http://mynamespace}MyService'\n
wrapperTask.needEndorsed=\u00c8 in corso l''esecuzione su JDK6, fornito con l''API JAX-WS {0} ma questo strumento richiede l''API JAX-WS {1}. Usare il meccanismo Endorsed Standards Override Mechanism (http://docs.oracle.com/javase/6/docs/technotes/guides/standards/) o impostare xendorsed="true" su <{2}>.

# {0}, {2} - version (e.g. 2.1), {1} - absolute class location
wrapperTask.loadingIncorrectApi=\u00c8 in corso il caricamento dell''API JAX-WS {0} da {1} ma questo strumento richiede l''API JAX-WS {2}.

invoker.needEndorsed=\u00c8 in corso l''esecuzione su JDK6, fornito con l''API JAX-WS {0} ma questo strumento richiede l''API JAX-WS {1}. Usare il meccanismo Endorsed Standards Override Mechanism (http://docs.oracle.com/javase/6/docs/technotes/guides/standards/) o usare l''opzione -Xendorsed.


#
# Generic Messages
#
wscompile.invalidOption=parametro non riconosciuto {0}
wsimport.noSuchJaxbOption=nessuna opzione JAXB: {0}

wscompile.error=errore: {0}
wscompile.warning=avvertenza: {0}
wscompile.info=informazioni: {0}
wscompile.duplicateOption=opzione duplicata: {0}
wscompile.noSuchDirectory=directory non trovata: {0}
# wscompile.missingOptionArgument
wscompile.missingOptionArgument=l''opzione \"{0}\" richiede un argomento
wscompile.compilationFailed=compilazione non riuscita. Gli errori dovrebbero essere stati segnalati.
wscompile.unsupportedEncoding=codifica non supportata: {0}

wsimport.missingFile=WSDL_URI mancante

wsgen.invalid.protocol=\"{0}\" non \u00e8 un protocollo supportato. I protocolli supportati includono: {1}.
wsgen.invalid.transport=\"{0}\" non \u00e8 un trasporto supportato. Il trasporto supportato include: {1}.
wsgen.class.not.found=Classe non trovata: \"{0}\"
wsgen.could.not.create.file="Impossibile creare il file: \"{0}\"
wsgen.missingFile=SEI mancante
wsgen.soap12.without.extension=Il protocollo opzionale \"Xsoap1.2\" deve essere usato insieme all'opzione \"-extension\".
wsgen.protocol.without.extension=Il protocollo opzionale \"{0}\" deve essere usato insieme all''opzione \"-extension\".
wsgen.wsdl.arg.no.genwsdl=L''opzione \"{0}\" pu\u00f2 essere usata solo insieme all''opzione \"-wsdl".
wsgen.servicename.missing.namespace=Spazio di nomi mancante nel nome di servizio \"{0}\".
wsgen.servicename.missing.localname=Nome locale mancante nel nome di servizio \"{0}\".
wsgen.portname.missing.namespace=Spazio di nomi mancante nel nome di porta \"{0}\".
wsgen.portname.missing.localname=Nome locale mancante nel nome di porta \"{0}\".
wsgen.class.must.be.implementation.class=La classe \"{0}\" non \u00e8 una classe di implementazione dell''endpoint.
wsimport.NotAFileNorURL = "{0}" non \u00e8 un nome file n\u00e9 un URL

wsgen.cannot.gen.wsdl.for.non.soap.binding=wsgen non pu\u00f2 generare WSDL per un''associazione non SOAP: {0} sulla classe {1}

wsgen.cannot.gen.wsdl.for.soap12.binding=wsgen non pu\u00f2 generare WSDL per un''associazione SOAP 1.2: {0} sulla classe {1}.\n
Please specificare i parametri \"-extension\" e \"-wsdl:protocol XSoap1.2\". Ad esempio:\n\n
wsgen -wsdl:protocol XSoap1.2 -extenson {1}
wsgen.inlineSchemas.only.with.wsdl=\"-inlineSchemas\" deve essere usato insieme all''opzione \"-wsdl\"

wsgen.no.webservices.class=wsgen non ha trovato alcuna classe con l''annotazione @WebService. Specificare l''annotazione @WebService su {0}.

wsimport.no.wsdl=Lettura del documento WSDL: {0} non riuscita perch\u00e9 1) non \u00e8 stato possibile trovare il documento; 2) non \u00e8 stato possibile leggere il documento; 3) l''elemento radice del documento non \u00e8 <wsdl:definitions>.

wsimport.FailedToParse = Analisi di "{0}" non riuscita: {1}

wsimport.ParsingWSDL=analisi di WSDL in corso...\n\n
wsimport.GeneratingCode=\nGenerazione del codice in corso...\n
wsimport.CompilingCode=\nCompilazione del codice in corso...\n
wsimport.ILLEGAL_TARGET_VERSION = "{0}" non \u00e8 una versione di destinazione valida. Sono supportate le versioni "2.0" e "2.1".

wsimport.ILLEGAL_AUTH_INFO = "{0}" non \u00e8 un formato di informazioni di autorizzazione valido. Il formato \u00e8 http[s]://user:password@host:port//<url-path>.

wsimport.readingAuthFile = Tentativo di lettura del file di autorizzazione: "{0}"...

# {0} - path to current authorization file, {1} - path to metro authorization file
wsimport.authFileNotFound = File di autorizzazione "{0}" non trovato. Se l''accesso WSDL richiede l''autenticazione Basic, fornire il file di autorizzazione con accesso in lettura a {1} oppure usare -Xauthfile per fornire il file di autorizzazione e su ogni riga fornire le informazioni di autorizzazione usando il formato: http[s]://user:password@host:porta//<url-path>

# {0} - exception message, {1} - systemId (e.g. location of WSDL file) , {2} - path to metro authentication file e.g.: Server returned HTTP response code: 401 for URL: http://localhost:8080/myServer/mywebService?WSDL, "http://localhost:8080/myServer/mywebService?WSDL" needs authorization, please provide authorization file with read access at C:\Documents and Settings\user\.metro\auth or use -Xauthfile to give the authorization file and on each line provide authorization information using this format : http[s]://user:password@host:port//
wsimport.authInfoNeeded = {0}, "{1}" richiede autorizzazione. Fornire il file di autorizzazione con accesso in lettura a {2} oppure usare -Xauthfile per fornire il file di autorizzazione e su ogni riga fornire le informazioni di autorizzazione usando il formato: http[s]://user:password@host:porta//<url-path>

wsimport.AUTH_INFO_LINENO = "riga {0} di {1}


wsimport.ErrorMessage = [ERROR] {0}

wsimport.WarningMessage = [WARNING] {0}

wsimport.InfoMessage = [INFO] {0}

wsimport.DebugMessage = [DEBUG] {0}

wsimport.httpRedirect = Il server ha restituito il codice di stato HTTP: "{0}". Nuovo tentativo con "{1}"

wsimport.maxRedirectAttempt = Impossibile ottenere un WSDL. Numero massimo di reindirizzamenti (5) raggiunto

wsimport.wsdllocation.clientjar = Impossibile specificare wsdlLocation quando viene usata l'opzione clientJar
# {0} - path to a zip file
wsimport.archivingArtifacts=\nArchiviazione degli artifact generati in {0}.\n
wsimport.archiveArtifact=Aggiunta di {0} all''archivio {1}
wsimport.fetchingMetadata=\nScaricamento di WSDL e dei metadati associati\n
# {0} - URI, {1} - path to a file
wsimport.document.download=\nScaricamento del documento dei metadati da {0} a {1}
