#
# Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

streaming.ioException=XML \u5256\u6790\u932F\u8AA4: {0}
streaming.parseException=XML \u5256\u6790\u932F\u8AA4: {0}

xmlreader.illegalStateEncountered=XML \u8B80\u53D6\u5668\u5167\u90E8\u932F\u8AA4: \u7121\u6548\u7684\u72C0\u614B ({0})
xmlreader.unexpectedCharacterContent=XML \u8B80\u53D6\u5668\u932F\u8AA4: \u672A\u9810\u671F\u7684\u5B57\u5143\u5167\u5BB9: \"{0}\"
xmlreader.ioException=XML \u8B80\u53D6\u5668\u932F\u8AA4: {0}
xmlreader.parseException=XML \u5256\u6790\u932F\u8AA4: {0}
xmlreader.nestedError=XML \u8B80\u53D6\u5668\u932F\u8AA4: {0}

xmlwriter.noPrefixForURI=XML \u5BEB\u5165\u5668\u932F\u8AA4: URI \"{0}\" \u6C92\u6709\u524D\u7F6E\u78BC
xmlwriter.ioException=XML \u5BEB\u5165\u5668\u932F\u8AA4: {0}
xmlwriter.nestedError=XML \u5BEB\u5165\u5668\u932F\u8AA4: {0}
xmlreader.unexpectedState=\u672A\u9810\u671F\u7684 XML \u8B80\u53D6\u5668\u72C0\u614B. \u9810\u671F: {0} \u4F46\u627E\u5230: {1}
xmlreader.unexpectedState.message=\u672A\u9810\u671F\u7684 XML \u8B80\u53D6\u5668\u72C0\u614B. \u9810\u671F\u70BA: {0} \u4F46\u627E\u5230: {1}. {2}
xmlreader.unexpectedState.tag=\u672A\u9810\u671F\u7684 XML \u6A19\u8A18. \u9810\u671F\u70BA: {0} \u4F46\u627E\u5230: {1}

xmlrecorder.recording.ended=\u6C92\u6709\u66F4\u591A\u53EF\u7528\u7684\u8A18\u9304\u5143\u7D20

stax.cantCreate=\u7121\u6CD5\u5EFA\u7ACB StAX \u8B80\u53D6\u5668\u6216\u5BEB\u5165\u5668
staxreader.xmlstreamexception=XML \u4E32\u6D41\u8B80\u53D6\u5668\u7570\u5E38\u72C0\u6CC1: {0}

fastinfoset.decodingNotAccepted=\u4E0D\u63A5\u53D7 Fast Infoset \u89E3\u78BC
fastinfoset.noImplementation=\u5728\u985E\u5225\u8DEF\u5F91\u4E2D\u627E\u4E0D\u5230\u76F8\u5BB9\u7684 Fast Infoset \u5BE6\u884C

sourcereader.invalidSource=\u7121\u6CD5\u5F9E\u4F86\u6E90 \"{0}\" \u5EFA\u7ACB\u8B80\u53D6\u5668
