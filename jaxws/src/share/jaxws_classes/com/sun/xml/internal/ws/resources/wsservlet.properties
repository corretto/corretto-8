#
# Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

no.sunjaxws.xml=Runtime descriptor "{0}" is missing

listener.parsingFailed=WSSERVLET11: failed to parse runtime descriptor: {0}
JAXRPCSERVLET11.diag.cause.1=WSRuntimeInfoParser could not parse sun-jaxws.xml runtime descriptor
WSSERVLET11.diag.check.1=Please check the sun-jaxws.xml file to make sure it is correct
WSSERVLET11.diag.cause.2=The sun-jaxws.xml runtime deployment descriptor may be missing
WSSERVLET11.diag.check.2=Please check the jaxrpc-ri.xml file to make sure it is present in the war file


listener.info.initialize=WSSERVLET12: JAX-WS context listener initializing
WSSERVLET12.diag.cause.1=Context listener starting
WSSERVLET12.diag.check.1=Normal web service startup

listener.info.destroy=WSSERVLET13: JAX-WS context listener destroyed
WSSERVLET13.diag.cause.1=Context listener shutdown
WSSERVLET13.diag.check.1=Normal web service shutdown

servlet.info.initialize=WSSERVLET14: JAX-WS servlet initializing
WSSERVLET14.diag.cause.1=Web Services servlet starting up.
WSSERVLET14.diag.check.1=Normal Web Service deployment. Deployment of service complete.

servlet.info.destroy=WSSERVLET15: JAX-WS servlet destroyed
WSSERVLET15.diag.cause.1=Web Services servlet shutdown.
WSSERVLET15.diag.check.1=Normal Web service undeployment. Undeployment complete.

servlet.warning.missingContextInformation=WSSERVLET16: missing context information
WSSERVLET16.diag.cause.1=The jaxrpc-ri.xml file may be missing from the war file
WSSERVLET16.diag.check.1=Unjar the service war file; check to see that the jaxrpc-ri-runtime.xml file is present


servlet.warning.duplicateEndpointName=WSSERVLET17: duplicate endpoint name
WSSERVLET17.diag.cause.1=Two or more endpoints with the same name where found in the jaxrpc-ri.xml runtime descriptor
WSSERVLET17.diag.check.1=Note that this may cause problems with service deployment


servlet.info.emptyRequestMessage=WSSERVLET18: got empty request message
WSSERVLET18.diag.cause.1=Message sent by client is empty
WSSERVLET18.diag.check.1=This may or may not be intentional. If not examine client program for errors.

servlet.trace.gotRequestForEndpoint=WSSERVLET19: got request for endpoint: {0}
WSSERVLET19.diag.cause.1=Client request for this endpoint arrived
WSSERVLET19.diag.check.1=Informational message only. Normal operation.

servlet.error.noImplementorForEndpoint=WSSERVLET20: no implementor for endpoint: {0}
WSSERVLET20.diag.cause.1=Implementation for this service can not be found
WSSERVLET20.diag.check.1=Unzip the war, are the tie and serializer classes found?

servlet.trace.invokingImplementor=WSSERVLET21: invoking implementor: {0}
WSSERVLET21.diag.cause.1=The Web service is being invoked
WSSERVLET21.diag.check.1=Normal web service invocation.

servlet.error.noEndpointSpecified=WSSERVLET22: no endpoint specified
WSSERVLET22.diag.cause.1=A request was invoked with no endpoint
WSSERVLET22.diag.check.1=Set endpoint with stub.setTargetEndpoint property

servlet.error.noResponseMessage=WSSERVLET23: no response message
WSSERVLET23.diag.cause.1=The request generated no response from the service
WSSERVLET23.diag.check.1=If a response was expected, check that a request message was actually sent
WSSERVLET23.diag.check.2=The request may be malformed and be accepted by the service, yet did not generate a response

servlet.trace.writingFaultResponse=WSSERVLET24: writing fault response
WSSERVLET24.diag.cause.1=SOAPFault message is being returned to the client.
WSSERVLET24.diag.check.1=Tracing message fault recorded.

servlet.trace.writingSuccessResponse=WSSERVLET25: writing success response
WSSERVLET25.diag.cause.1=SOAPMessage response is being returned to client
WSSERVLET25.diag.check.1=Tracing message, normal response.

servlet.warning.duplicateEndpointUrlPattern=WSSERVLET26: duplicate URL pattern in endpoint: {0}
WSSERVLET26.diag.cause.1=The endpoint URL is a duplicate
WSSERVLET26.diag.check.1=This may cause a problem, please remove duplicate endpoints

servlet.warning.ignoringImplicitUrlPattern=WSSERVLET27: unsupported implicit URL pattern in endpoint: {0}
WSSERVLET27.diag.cause.1=Implicit URLS are not supported in this release
WSSERVLET27.diag.check.1=Remove the implicit URL

servlet.faultstring.missingPort=WSSERVLET28: Missing port information
WSSERVLET28.diag.cause.1=Target endpoint is null
WSSERVLET28.diag.check.1=Set target endpoint with stub.setTargetEndpoint() property.

servlet.faultstring.portNotFound=WSSERVLET29: Port not found ({0})
WSSERVLET29.diag.cause.1=A port is specified, but a corresponding service implementation is not found
WSSERVLET29.diag.check.1=Is the port valid? Unzip the war file and make sure the tie and serializers are present

servlet.faultstring.internalServerError=WSSERVLET30: Internal server error ({0})
WSSERVLET30.diag.cause.1=There was a server error processing the request
WSSERVLET30.diag.check.1=This could be due to a number of causes. Check the server log file for exceptions.

error.servlet.caughtThrowableWhileRecovering=WSSERVLET51: caught throwable while recovering from a previous exception: {0}
WSSERVLET51.diag.cause.1=Service processing of the request generated an exception; while attempting to return a SOAPPFaultMessage a throwable was again generated
WSSERVLET51.diag.check.1=Check the server.xml log file for exception information

error.servlet.caughtThrowable=WSSERVLET49: caught throwable: {0}
WSSERVLET49.diag.cause.1=Service processing of the request generated an exception; while attempting to return a SOAPFaultMessage a throwable was again generated
WSSERVLET49.diag.check.1=Check the server.xml log file for exception information

error.servlet.caughtThrowableInInit=WSSERVLET50: caught throwable during servlet initialization: {0}
WSSERVLET50.diag.cause.1=WS runtime sun-jaxws.xml or web.xml may be incorrect
WSSERVLET50.diag.check.1=Verify that sun-jaxws.xml and web.xml are correct in the service war file
WSSERVLET50.diag.cause.2=Application server deployment descriptors may be incorrect
WSSERVLET50.diag.check.2=Verify that Application server deployment descriptors are correct in the service war file
WSSERVLET50.diag.cause.3=There may some Application Server initialization problems
WSSERVLET50.diag.check.3=Check the server.xml file in the domain directory for failures

publisher.info.applyingTransformation=WSSERVLET31: applying transformation with actual address: {0}
WSSERVLET31.diag.cause.1=Transformation being applied
WSSERVLET31.diag.check.1=Normal operation

publisher.info.generatingWSDL=WSSERVLET32: generating WSDL for endpoint: {0}
WSSERVLET32.diag.cause.1=WSDL being generated
WSSERVLET32.diag.check.1=Normal Operation.

exception.cannotCreateTransformer=WSSERVLET33: cannot create transformer
WSSERVLET33.diag.cause.1=When publishing the service wsdl, the http location is patched with the deployed location/endpoint using XSLT transformation. The transformer could not be created to do the transformation.
WSSERVLET33.diag.check.1=There maybe a transformation engine being used that is not compatible. Make sure you are using the correct transformer and version.
WSSERVLET33.diag.cause.2=When publishing the service wsdl, the http location is patched with the deployed location/endpoint using XSLT transformation. The transformer could not be created to do the transformation.
WSSERVLET33.diag.check.2=There maybe a transformation engine may not be supported or compatible. Check the server.xml file for exceptions.


exception.transformationFailed=WSSERVLET34: transformation failed : {0}
WSSERVLET34.diag.cause.1=The location patching on the wsdl failed when attempting to transform.
WSSERVLET34.diag.check.1=Check the log file(s) for more detailed errors/exceptions.

exception.templateCreationFailed=WSSERVLET35: failed to create a template object
WSSERVLET35.diag.cause.1=A XSLT stylesheet template is create for the wsdl location patching using transformation. Template create failed.
WSSERVLET35.diag.check.1=An exception was thrown during creation of the template. View exception and stacktrace for more details.

servlet.html.method=WSSERVLET63: must use Post for this type of request
WSSERVLET63.diag.cause.1=Web service requests must use HTTP POST method: WSI BP 1.0
WSSERVLET63.diag.check.1=Make sure that your HTTP client is using POST requests, not GET requests


servlet.faultstring.invalidContentType=WSSERVLET64: Invalid Content-Type, text/xml required
WSSERVLET64.diag.cause.1=Web service requests must be a content type text/xml: WSI BP 1.0
WSSERVLET64.diag.check.1=Make sure the client request is using text/xml

error.implementorFactory.newInstanceFailed=WSSERVLET43: failed to instantiate service implementor for port \"{0}\"
WSSERVLET43.diag.cause.1=Instantiation of the web service failed.
WSSERVLET43.diag.check.1=Make sure web service is available and public. Examine exception for more details

error.implementorFactory.servantInitFailed=WSSERVLET44: failed to initialize the service implementor for port \"{0}\"
WSSERVLET44.diag.cause.1=The web service was instantiated, however, it could not be initialized
WSSERVLET44.diag.check.1=Check the exception for more details. Make sure all the configuration files are correct.

#not used by anything currently
servlet.faultstring.invalidSOAPAction=WSSERVLET65: Invalid Header SOAPAction required
WSSERVLET65.diag.cause.1=SOAP Action is required
WSSERVLET65.diag.check.1=Add SOAPAction and appropriate value

# {0} - URI
servlet.no.address.available=No address is available for {0}

servlet.html.title= Web Services
servlet.html.title2=<h1>Web Services</h1>
servlet.html.noInfoAvailable=<p>No JAX-WS context information available.</p>
servlet.html.columnHeader.portName=Endpoint
servlet.html.columnHeader.status=Status
servlet.html.columnHeader.information=Information
# This is a status code and should not be translated (if you have to, translate it using capital letters).
# Usage not found. TODO Remove
#servlet.html.status.active=ACTIVE
# This is a status code and should not be translated (if you have to, translate it using capital letters).
# Usage not found. TODO Remove
#servlet.html.status.error=ERROR
servlet.html.endpoint.table=<table border=\"0\"><tr><td>Service Name\:</td><td>{0}</td></tr><tr><td>Port Name\:</td><td>{1}</td></tr></table>
servlet.html.information.table=<table border=\"0\"><tr><td>Address\:</td><td>{0}</td></tr><tr><td>WSDL\:</td><td><a href\="{0}?wsdl">{0}?wsdl</a></td></tr><tr><td>Implementation class\:</td><td>{1}</td></tr></table>
servlet.html.notFound=<h1>404 Not Found: {0}</h1>


#
#
# all the following properties are used by the http/ea package
# these properties are not longer used as http/ea is no longer used
#
error.implementorFactory.noConfiguration=WSSERVLET36: no configuration specified
error.implementorFactory.noInputStream=WSSERVLET37: no configuration specified
error.implementorRegistry.unknownName=WSSERVLET38: unknown port name: {0}
error.implementorRegistry.cannotReadConfiguration=WSSERVLET39: cannot read configuration
error.implementorRegistry.classNotFound=WSSERVLET40: class not found: {0}
error.implementorRegistry.incompleteInformation=WSSERVLET41: configuration information is incomplete
error.implementorRegistry.duplicateName=WSSERVLET42: duplicate port name: {0}

error.implementorRegistry.fileNotFound=WSSERVLET45: file not found: {0}
error.wsdlPublisher.cannotReadConfiguration=WSSERVLET46: cannot read configuration
error.servlet.init.config.parameter.missing=WSSERVLET47: cannot find configuration parameter: \"{0}\"
error.servlet.init.config.fileNotFound=WSSERVLET48: config file: \"{0}\" not found
#

error.servlet.noImplementorForPort=WSSERVLET52: no implementor registered for port: {0}
error.servlet.noPortSpecified=WSSERVLET53: no port specified in HTTP POST request URL
error.servlet.noResponseWasProduced=WSSERVLET54: no response was produced (internal error)
#
info.servlet.gotEmptyRequestMessage=WSSERVLET55: got empty request message
info.servlet.initializing=WSSERVLET56: JAX-WS servlet: init
info.servlet.destroying=WSSERVLET57: JAX-WS servlet: destroy
#
trace.servlet.requestForPortNamed=WSSERVLET58: got request for port: {0}
trace.servlet.handingRequestOverToImplementor=WSSERVLET59: handing request over to implementor: {0}
trace.servlet.gotResponseFromImplementor=WSSERVLET60: got response from implementor: {0}
trace.servlet.writingFaultResponse=WSSERVLET61: writing fault response
trace.servlet.writingSuccessResponse=WSSERVLET62: writing success response
#
html.nonRootPage.title= Web Service
html.nonRootPage.body1= <p>A Web Service is installed at this URL.</p>
html.nonRootPage.body2= <p>Invalid request URI.</p><p>Please check your deployment information.</p>
# Usage not found. TODO Remove
#html.nonRootPage.body3a= <p>Please refer to <a href=\'
# Concatenated with html.nonRootPage.body3a
#html.nonRootPage.body3b= \'>this page</a> for information about the deployed services.</p>
html.wsdlPage.title= Web Service
html.wsdlPage.noWsdl=<p>No WSDL document available for publishing.</p><p>Please check your deployment information.</p>
html.rootPage.title= Web Service
html.rootPage.body1=<p>A Web Service is installed at this URL.</p>
html.rootPage.body2a=<p>It supports the following ports:
html.rootPage.body2b=</p>
# Usage not found. TODO Remove
#html.rootPage.body3a=<p>A WSDL description of these ports is available <a href='
# Concatenated with html.rootPage.body3a
#html.rootPage.body3b='>here.</a></p>
html.rootPage.body4=<p>This endpoint is incorrectly configured. Please check the location and contents of the configuration file.</p>

message.too.long=\nMessage has been truncated\n\
use {0} property to increase the amount of printed part of the message
