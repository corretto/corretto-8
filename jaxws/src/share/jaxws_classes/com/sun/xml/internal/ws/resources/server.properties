#
# Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

soapdecoder.err=Error in decoding SOAP Message
server.rt.err=Server Runtime Error: {0}
soapencoder.err=Error in encoding SOAP Message

annotation.only.once=Only one method should have the annotation \"{0}\"
not.zero.parameters=Method \"{0}\" shouldn''t have any arguments

wrong.field.type=Incorrect type for field \"{0}\"
wrong.no.parameters=Incorrect no of arguments for method \"{0}\"
wrong.parameter.type=Incorrect argument types for method \"{0}\"

can.not.generate.wsdl=Cannot generate WSDL for binding \"{0}\"
generate.non.standard.wsdl=Generating non-standard WSDL for the specified binding
null.implementor=Implementor cannot be null

runtime.wsdl.patcher=error while patching WSDL related document

# {0} - class name
not.implement.provider=\"{0}\" doesn't implement Provider
# {0} - class name
provider.not.parameterized=\"{0}\" implements Provider but doesn't specify the type parameter
# {0}, {1} - class name e.g.: "class foo.bar.ClassImpl" implements Provider but its type parameter interface foo.bar.Iface is incorrect
provider.invalid.parameterType=\"{0}\" implements Provider but its type parameter {1} is incorrect

wsdl.required=wsdl is required
service.name.required=Service QName is not found
port.name.required=Port QName is not found
wrong.tns.for.port=Port namespace {0} doesn't match Service namespace {1}

# {0} - probably URL/port of a server
already.http.server=There is already a HTTP server at : {0}\
# {0} - probably URL/port of a server
already.https.server=There is already a HTTPS server at : {0}
#not.HttpContext.type=Required com.sun.net.httpserver.HttpContext. Got : {0}

not.know.HttpContext.type=Doesn''t support Endpoint.publish({0}). Known context types are {1}, and {2}

duplicate.primary.wsdl=Metadata has more than one WSDL that has Service definition for the endpoint. WSDL={0} is one such WSDL.
duplicate.abstract.wsdl=Metadata has more than one WSDL that has PortType definition for the endpoint. WSDL={0} is one such WSDL.

# Wrapped into an Exception. Not concatenated with any other string.
runtime.parser.classNotFound=class not found in runtime descriptor: {0}
# Wrapped into an Exception. Not concatenated with any other string.
runtime.parser.xmlReader=error parsing runtime descriptor: {0}
# Usage not found. TODO Remove
#runtime.parser.invalidReaderState=error parsing runtime descriptor: {0}
runtime.parser.unexpectedContent=unexpected content in runtime descriptor (line {0})
runtime.parser.invalidElement=invalid element \"{1}\" in runtime descriptor (line {0})
runtime.parser.invalidAttributeValue=invalid value for attribute \"{2}\" of element \"{1}\" in runtime descriptor (line {0})
runtime.parser.invalidVersionNumber=unsupported runtime descriptor version: {2}
runtime.parser.missing.attribute=missing attribute \"{2}\" in element \"{1}\" of runtime descriptor (line {0})
runtime.parser.invalid.attribute.value=invalid attribute value \"{1}\" in runtime descriptor (line {0})
runtime.parser.missing.attribute.no.line=missing attribute \"{2}\" in element \"{1}\" of runtime descriptor
runtime.parser.wrong.element=found element \"{1}\", expected \"{2}\" in runtime descriptor (line {0})
runtime.parser.wsdl.not.found={0} is not found in the WAR file. Package it in the WAR file or correct it in sun-jaxws.xml.
runtime.parser.wsdl=exception during WSDL parsing: {0}
runtime.saxparser.exception={0}\n{1}
# Usage not found. TODO Remove
#runtime.parser.wsdl.noservice=can\'t apply binding! service {0} not found in the WSDL {1}
# Usage not found. TODO Remove
#runtime.parser.wsdl.nobinding=can\'t apply binding! no binding found for binding ID {0} for service {1} in WSDL {2}
runtime.parser.wsdl.multiplebinding=multiple bindings found for binding ID {0} for service {1} in WSDL {2}
runtime.parser.wsdl.noservice.in.wsdlmodel=There is an error in processing the WSDL {0} and no valid services are found.
runtime.parser.wsdl.incorrectservice=could not get binding from WSDL! service: {0} not found in the WSDL {1}.\n\
  It could be because service name does not match WSDL''s wsdl:service name:\n\
    1. service name is not there in deployment descriptor OR\n\
    2. Either there is a typo in deployment descriptor''s service name OR\n\
    3. The computed names from @WebService do not match wsdl:service name\n\
  OR\n\
    1. There is an error while parsing the wsdl and Service with name {0} is not found in the WSDLModel.\n\
  Suggest doing the following:\n\
    1. Add/Correct entries for service name in deployment descriptor OR \n\
    2. Specify targetNamespace, serviceName in @WebService on the endpoint class

runtime.parser.wsdl.incorrectserviceport=could not get binding from WSDL! service: {0} or port {1} not found in the WSDL {2}.\n\
  It could be because service and port names do not match WSDL''s wsdl:service and wsdl:port names:\n\
    1. service and port names are not there in deployment descriptor OR\n\
    2. Either there is a typo in deployment descriptor''s service and port names OR\n\
    3. The computed names from @WebService do not match wsdl:service and wsdl:port names\n\
  Suggest doing the following:\n\
    1. Add/Correct entries for service and port names in deployment descriptor OR \n\
    2. Specify targetNamespace, serviceName, portName in @WebService on the endpoint class

stateful.cookie.header.required=This is a stateful web service and {0} header is required.
stateful.cookie.header.incorrect=Invalid/expired {0} header value: {1}
stateful.invalid.webservice.context=Not a WebServiceContext from JAX-WS RI: {0}
stateful.requres.addressing=Stateful web service {0} requires the WS-Addressing support to be enabled. Perhaps you are missing @Addressing

no.current.packet=This thread is not currently processing any web service request.

# {0} - class name. {1} - annotation type class name, {2} - class name e.g.: Unable to instantiate class foo.Bar (which is specified in foo.Bar1 on class foo.Bar2)
failed.to.instantiate.instanceResolver=Unable to instantiate {0} (which is specified in {1} on {2})

static.resource.injection.only=Static resource {0} cannot be injected to non-static "{1}"

dd.mtom.conflict = Error in Deployment Descriptor : MTOM Configuration in binding {0} conflicts with enable-mtom attribute value {1}

# {0} - qname of an element
dispatch.cannotFindMethod=Cannot find dispatch method for {0}
non.unique.dispatch.qname=Non unique body parts! In a port, as per BP 1.1 R2710 operations must have unique \
  operation signature on the wire for successful dispatch. Methods {0} have the \
  same request body block {1}. Method dispatching may fail, runtime will try to \
  dispatch using SOAPAction. Another option is to enable AddressingFeature to enabled runtime to uniquely identify \
  WSDL operation using wsa:Action header.

unsupported.contentType=Unsupported Content-Type: {0} Supported ones are: {1}
no.contentType=Request doesn't have a Content-Type
unsupported.charset=Unsupported charset "{0}" in the received message''s Content-Type
duplicate.portKnownHeader=Received SOAP message contains duplicate header: {0} for a bound parameter

runtimemodeler.invalidannotationOnImpl=Invalid annotation: {0} on endpoint implementation class \"{1}\" - will be ignored. \"{1}\" is annotated with @WebService(endpointInterface=\"{2}\"}, it must not be annotated with {0}, to fix it - put this annotation on the SEI {2}.
