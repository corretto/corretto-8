#
# Copyright (c) 2005, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

wsimport.usage=Sintaxis: {0} [options] <WSDL_URI>\n\nUtilice "wsimport -help" para obtener una descripci\u00f3n detallada de las opciones.

wsimport.help=\nSintaxis: {0} [options] <WSDL_URI>\n\n\\donde [options] incluye:\n\\  -b <ruta de acceso>                 especifica archivos de enlace jaxws/jaxb o esquemas adicionales\n\\                            (Cada <ruta de acceso> debe tener su propio -b)\n\\  -B<Opci\u00f3njaxb>            Transfiere esta opci\u00f3n al compilador de esquemas JAXB\n\\  -catalog <archivo>           especifica un archivo de cat\u00e1logo para resolver las referencias a entidad externa\n\\                            soporta TR9401, XCatalog y el formato de cat\u00e1logo OASIS XML.\n\\  -d <directorio>            especifica d\u00f3nde se colocan los archivos de salida generados\n\\  -encoding <codificaci\u00f3n>      especifica la codificaci\u00f3n de caracteres que utilizan los archivos de origen\n\\  -extension                permite extensiones de proveedor - funcionalidad no especificada\n\\                            en la especificaci\u00f3n. El uso de extensiones puede\n\\                            dar lugar a aplicaciones que no son portables o\n\\                            que no funcionan con otras implantaciones\n\\  -help                     muestra la ayuda\n\\  -httpproxy:<host>:<puerto>  especifica un servidor proxy HTTP (el puerto por defecto es 8080)\n\\  -keep                     mantiene los archivos generados\n\\  -p <paquete>                  especifica el paquete de destino\n\\  -quiet                    suprime la salida de wsimport\n\\  -s <directorio>            especifica d\u00f3nde se colocan los archivos de origen generados\n\\  -target <versi\u00f3n>         genera c\u00f3digo de acuerdo con la versi\u00f3n de la especificaci\u00f3n JAXWS indicada\n\\                            El valor por defecto es 2.2; los valores aceptados son 2.0, 2.1 y 2.2\n\\                            por ejemplo, 2.0 generar\u00e1 c\u00f3digo compatible con la especificaci\u00f3n JAX-WS 2.0\n\\  -verbose                  env\u00eda mensajes acerca de lo que est\u00e1 haciendo el compilador\n\\  -version                  imprime la informaci\u00f3n de versi\u00f3n\n\\  -wsdllocation <ubicaci\u00f3n>  valor de @WebServiceClient.wsdlLocation\n\\  -clientjar <archivo jar>      crea el archivo jar de los artefactos generados junto con los\n\\                            metadatos WSDL necesarios para llamar al servicio web.\n\\  -generateJWS              genera un archivo de implantaci\u00f3n JWS con stub\n\\  -implDestDir <directorio>  especifica d\u00f3nde se genera el archivo de implantaci\u00f3n JWS\n\\  -implServiceName <nombre>   parte local del nombre de servicio de la implantaci\u00f3n de JWS generada\n\\  -implPortName <nombre>      parte local del nombre de puerto de la implantaci\u00f3n de JWS generada

wsimport.usage.extensions=\n\\Extensiones:\n\\  -XadditionalHeaders              asigna cabeceras no enlazadas a la solicitud o el mensaje de respuesta a los \n\\                                   par\u00e1metros del m\u00e9todo Java\n\\  -Xauthfile                       archivo que lleva la informaci\u00f3n de autorizaci\u00f3n en el formato \n\\                                   http://username:password@example.org/stock?wsdl\n\\  -Xdebug                          imprime la informaci\u00f3n de depuraci\u00f3n\n\\  -Xno-addressing-databinding      permite el enlace de W3C EndpointReferenceType a Java\n\\  -Xnocompile                      no compila los archivos Java generados\n\\  -XdisableAuthenticator           desactiva el autenticador utilizado por la implantaci\u00f3n de referencia de JAX-WS,\n\\                                   la opci\u00f3n -Xauthfile se ignora si est\u00e1 definida\n\\  -XdisableSSLHostnameVerification desactiva la verificaci\u00f3n del nombre de host SSL al recuperar\n\\                                   wsdls


wsimport.usage.examples=\n\\Ejemplos:\n\\ wsimport stock.wsdl -b stock.xml -b stock.xjb\n\\ wsimport -d genera http://example.org/stock?wsdl\n

wsgen.usage=Sintaxis: {0} [options] <SEI>\n\nUtilice "wsgen -help" para obtener una descripci\u00f3n detallada de las opciones.

wsgen.help=\nSintaxis: {0} [options] <SEI>\n\n\\donde [options] incluye:\n\\  -classpath <ruta de acceso>          especifica d\u00f3nde se encuentran los archivos de clase de entrada\n\\  -cp <ruta de acceso>                 igual que -classpath <ruta de acceso>\n\\  -d <directorio>             especifica d\u00f3nde se colocan los archivos de salida generados\n\\  -encoding <codificaci\u00f3n>       especifica la codificaci\u00f3n de caracteres que utilizan los archivos de origen\n\\  -extension                 permite extensiones de proveedor  - funcionalidad no especificada\n\\                             en la especificaci\u00f3n. El uso de extensiones\n\\                             puede dar lugar a aplicaciones que no son portables o\n\\                             que no funcionan con otras implantaciones\n\\  -help                      muestra la ayuda\n\\  -keep                      mantiene archivos generados\n\\  -r <directorio>             directorio de destino de recursos; especifica d\u00f3nde se\n\\                             colocan archivos de recursos como los WSDL\n\\  -s <directorio>             especifica d\u00f3nde se colocan los archivos de origen generados\n\\  -verbose                   env\u00eda mensajes acerca de lo que est\u00e1 haciendo el compilador\n\\  -version                   imprime la informaci\u00f3n de versi\u00f3n\n\\  -wsdl[:protocol]           genera un archivo WSDL. El protocolo es opcional.\n\\                             Los protocolos v\u00e1lidos son {1},\n\\                             el protocolo por defecto es soap1.1.\n\\                             Los protocolos no est\u00e1ndar {2}\n\\                             s\u00f3lo se pueden utilizar junto con la opci\u00f3n\n\\                             -extension.\n\\  -inlineSchemas             esquemas en l\u00ednea en el WSDL generado. Se deben\n\\                             utilizar junto con la opci\u00f3n -wsdl.\n\\  -servicename <nombre>        especifica el nombre de servicio que se va a utilizar en el WSDL generado\n\\                             Se utiliza junto con la opci\u00f3n -wsdl.\n\\  -portname <nombre>           especifica el nombre de puerto que se va a utilizar en el WSDL generado\n\\                             Se utiliza junto con la opci\u00f3n -wsdl.


wsgen.usage.examples=\n\\Ejemplos:\n\\ wsgen -cp . example.Stock\n\\ wsgen -cp . example.Stock -wsdl -servicename '{http://mynamespace}MyService'\n
wrapperTask.needEndorsed=Est\u00e1 utilizando JDK6, que incluye la API JAX-WS {0}, pero esta herramienta necesita la API JAX-WS {1}. Utilice el mecanismo de sustituci\u00f3n de los est\u00e1ndares aprobados (http://docs.oracle.com/javase/6/docs/technotes/guides/standards/), o defina xendorsed="true" en <{2}>.

# {0}, {2} - version (e.g. 2.1), {1} - absolute class location
wrapperTask.loadingIncorrectApi=Est\u00e1 cargando la API JAX-WS {0} desde {1}, pero esta herramienta necesita la API JAX-WS {2}.

invoker.needEndorsed=Est\u00e1 utilizando JDK6, que incluye la API JAX-WS {0}, pero esta herramienta necesita la API JAX-WS {1}. Utilice el mecanismo de sustituci\u00f3n de los est\u00e1ndares aprobados (http://docs.oracle.com/javase/6/docs/technotes/guides/standards/), o utilice la opci\u00f3n -Xendorsed.


#
# Generic Messages
#
wscompile.invalidOption=par\u00e1metro {0} no reconocido
wsimport.noSuchJaxbOption=no existe esa opci\u00f3n JAXB: {0}

wscompile.error=error: {0}
wscompile.warning=advertencia: {0}
wscompile.info=informaci\u00f3n: {0}
wscompile.duplicateOption=opci\u00f3n duplicada: {0}
wscompile.noSuchDirectory=no se ha encontrado el directorio: {0}
# wscompile.missingOptionArgument
wscompile.missingOptionArgument=la opci\u00f3n \"{0}\" necesita un argumento
wscompile.compilationFailed=fallo de compilaci\u00f3n; se ha debido informar de los errores
wscompile.unsupportedEncoding=codificaci\u00f3n no soportada: {0}

wsimport.missingFile=Falta WSDL_URI

wsgen.invalid.protocol=\"{0}\" no es un protocolo soportado. Los protocolos soportados son: {1}.
wsgen.invalid.transport=\"{0}\" no es un transporte soportado. El transporte soportado es: {1}.
wsgen.class.not.found=No se ha encontrado la clase: \"{0}\"
wsgen.could.not.create.file="No se ha podido crear el archivo: "\\{0}\"
wsgen.missingFile=Falta la interfaz de punto final de servicio
wsgen.soap12.without.extension=El protocolo opcional \\"Xsoap1.2\\" se debe utilizar junto con la opci\u00f3n \\"-extension\\".
wsgen.protocol.without.extension=El protocolo opcional \"{0}\" se debe utilizar junto con la opci\u00f3n \"-extension\".
wsgen.wsdl.arg.no.genwsdl=La opci\u00f3n \\"{0}\\" s\u00f3lo se puede utilizar junto con la opci\u00f3n "-wsdl".
wsgen.servicename.missing.namespace=Al nombre del servicio \\"{0}\\" le falta un espacio de nombres.
wsgen.servicename.missing.localname=Al nombre del servicio \\"{0}\\" le falta un nombre local.
wsgen.portname.missing.namespace=Al nombre del puerto \"{0}\" le falta un espacio de nombres.
wsgen.portname.missing.localname=Al nombre del puerto \"{0}\" le falta un nombre local.
wsgen.class.must.be.implementation.class=La clase \"{0}\" no es una clase de implantaci\u00f3n de punto final.
wsimport.NotAFileNorURL = "{0}" no es un nombre de archivo ni una URL

wsgen.cannot.gen.wsdl.for.non.soap.binding=wsgen no puede generar WSDL para enlaces no SOAP: {0} en la clase {1}

wsgen.cannot.gen.wsdl.for.soap12.binding=wsgen no puede generar WSDL para enlaces SOAP 1.2: {0} en la clase {1}.\n
Please especifique los conmutadores \\"-extension\\" y \\"-wsdl:protocol XSoap1.2\\". Por ejemplo:\n\n
wsgen -wsdl:protocol XSoap1.2 -extenson {1}
wsgen.inlineSchemas.only.with.wsdl=\\"-inlineSchemas\\" se debe utilizar junto con la opci\u00f3n \\"-wsdl\\"

wsgen.no.webservices.class=wsgen no ha encontrado ninguna clase con la anotaci\u00f3n @WebService. Especifique la anotaci\u00f3n @WebService en {0}.

wsimport.no.wsdl=Fallo al leer el documento WSDL: {0}, porque 1) no se ha encontrado el documento, /2) el documento no se ha podido leer; 3) el elemento ra\u00edz del documento no es <wsdl:definitions>.

wsimport.FailedToParse = Fallo al analizar "{0}": {1}

wsimport.ParsingWSDL=analizando WSDL...\n\n
wsimport.GeneratingCode=\nGenerando c\u00f3digo...\n
wsimport.CompilingCode=\nCompilando c\u00f3digo...\n
wsimport.ILLEGAL_TARGET_VERSION = "{0}" no es una versi\u00f3n de destino v\u00e1lida. "2.0" y "2.1" est\u00e1n soportadas.

wsimport.ILLEGAL_AUTH_INFO = "{0}" no es un formato de informaci\u00f3n de autorizaci\u00f3n v\u00e1lido. El formato es http[s]://usuario:contrase\u00f1a@host:puerto//<url-ruta de acceso>.

wsimport.readingAuthFile = Intentando leer el archivo de autorizaci\u00f3n: "{0}"...

# {0} - path to current authorization file, {1} - path to metro authorization file
wsimport.authFileNotFound = No se ha encontrado el archivo de autorizaci\u00f3n "{0}". Si el acceso WSDL necesita autenticaci\u00f3n b\u00e1sica, proporcione un archivo de autorizaci\u00f3n con acceso de lectura en {1} o utilice -Xauthfile para proporcionar el archivo de autorizaci\u00f3n y, en cada l\u00ednea, proporcione la informaci\u00f3n de autorizaci\u00f3n utilizando este formato: http[s]://usuario:contrase\u00f1a@host:puerto//<url-ruta de acceso>

# {0} - exception message, {1} - systemId (e.g. location of WSDL file) , {2} - path to metro authentication file e.g.: Server returned HTTP response code: 401 for URL: http://localhost:8080/myServer/mywebService?WSDL, "http://localhost:8080/myServer/mywebService?WSDL" needs authorization, please provide authorization file with read access at C:\Documents and Settings\user\.metro\auth or use -Xauthfile to give the authorization file and on each line provide authorization information using this format : http[s]://user:password@host:port//
wsimport.authInfoNeeded = {0}, "{1}" necesita autorizaci\u00f3n. Proporcione un archivo de autorizaci\u00f3n con acceso de lectura en {2} o utilice -Xauthfile para proporcionar el archivo de autorizaci\u00f3n y, en cada l\u00ednea, proporcione la informaci\u00f3n de autorizaci\u00f3n utilizando este formato: http[s]://usuario:contrase\u00f1a@host:puerto//<url-ruta de acceso>

wsimport.AUTH_INFO_LINENO = "l\u00ednea {0} de {1}


wsimport.ErrorMessage = [ERROR] {0}

wsimport.WarningMessage = [WARNING] {0}

wsimport.InfoMessage = [INFO] {0}

wsimport.DebugMessage = [DEBUG] {0}

wsimport.httpRedirect = El servidor ha devuelto el c\u00f3digo de estado HTTP: "{0}"; reintentando con "{1}"

wsimport.maxRedirectAttempt = No se puede obtener un WSDL. Se ha alcanzado el n\u00famero m\u00e1ximo de redireccionamientos (5).

wsimport.wsdllocation.clientjar = wsdlLocation no se puede especificar al utilizar la opci\u00f3n clientJar
# {0} - path to a zip file
wsimport.archivingArtifacts=\nArchivando los artefactos generados en {0}.\n
wsimport.archiveArtifact=Agregando {0} al archivo {1}
wsimport.fetchingMetadata=\nDescargando el WSDL y los metadatos asociados\n
# {0} - URI, {1} - path to a file
wsimport.document.download=\nDescargando el documento de metadatos desde {0} en {1}
