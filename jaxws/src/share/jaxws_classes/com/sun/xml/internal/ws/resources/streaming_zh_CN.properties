#
# Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

streaming.ioException=XML \u89E3\u6790\u9519\u8BEF: {0}
streaming.parseException=XML \u89E3\u6790\u9519\u8BEF: {0}

xmlreader.illegalStateEncountered=XML \u8BFB\u8FDB\u7A0B\u5185\u90E8\u9519\u8BEF: \u975E\u6CD5\u7684\u72B6\u6001 ({0})
xmlreader.unexpectedCharacterContent=XML \u8BFB\u8FDB\u7A0B\u9519\u8BEF: \u610F\u5916\u7684\u5B57\u7B26\u5185\u5BB9: \"{0}\"
xmlreader.ioException=XML \u8BFB\u8FDB\u7A0B\u9519\u8BEF: {0}
xmlreader.parseException=XML \u89E3\u6790\u9519\u8BEF: {0}
xmlreader.nestedError=XML \u8BFB\u8FDB\u7A0B\u9519\u8BEF: {0}

xmlwriter.noPrefixForURI=XML \u5199\u8FDB\u7A0B\u9519\u8BEF: URI \u6CA1\u6709\u524D\u7F00: \"{0}\"
xmlwriter.ioException=XML \u5199\u8FDB\u7A0B\u9519\u8BEF: {0}
xmlwriter.nestedError=XML \u5199\u8FDB\u7A0B\u9519\u8BEF: {0}
xmlreader.unexpectedState=\u610F\u5916\u7684 XML \u8BFB\u8FDB\u7A0B\u72B6\u6001\u3002\u5E94\u4E3A: {0}, \u4F46\u627E\u5230\u7684\u662F: {1}
xmlreader.unexpectedState.message=\u610F\u5916\u7684 XML \u8BFB\u8FDB\u7A0B\u72B6\u6001\u3002\u5E94\u4E3A: {0}, \u4F46\u627E\u5230\u7684\u662F: {1}\u3002{2}
xmlreader.unexpectedState.tag=\u610F\u5916\u7684 XML \u6807\u8BB0\u3002\u5E94\u4E3A: {0}, \u4F46\u627E\u5230\u7684\u662F: {1}

xmlrecorder.recording.ended=\u6CA1\u6709\u66F4\u591A\u7684\u8BB0\u5F55\u5143\u7D20\u53EF\u7528

stax.cantCreate=\u65E0\u6CD5\u521B\u5EFA StAX \u8BFB\u8FDB\u7A0B\u6216\u5199\u8FDB\u7A0B
staxreader.xmlstreamexception=XML \u6D41\u8BFB\u8FDB\u7A0B\u5F02\u5E38\u9519\u8BEF: {0}

fastinfoset.decodingNotAccepted=\u4E0D\u63A5\u53D7\u5FEB\u901F\u4FE1\u606F\u96C6\u89E3\u7801
fastinfoset.noImplementation=\u5728\u7C7B\u8DEF\u5F84\u4E2D\u627E\u4E0D\u5230\u5FEB\u901F\u4FE1\u606F\u96C6\u7684\u517C\u5BB9\u5B9E\u73B0

sourcereader.invalidSource=\u65E0\u6CD5\u4ECE\u6E90 \"{0}\" \u521B\u5EFA\u8BFB\u8FDB\u7A0B
