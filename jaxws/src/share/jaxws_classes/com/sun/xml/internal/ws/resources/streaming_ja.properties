#
# Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

streaming.ioException=XML\u89E3\u6790\u30A8\u30E9\u30FC: {0}
streaming.parseException=XML\u89E3\u6790\u30A8\u30E9\u30FC: {0}

xmlreader.illegalStateEncountered=XML\u30EA\u30FC\u30C0\u30FC\u5185\u90E8\u30A8\u30E9\u30FC: \u4E0D\u6B63\u306A\u72B6\u614B({0})
xmlreader.unexpectedCharacterContent=XML\u30EA\u30FC\u30C0\u30FC\u30FB\u30A8\u30E9\u30FC: \u4E88\u671F\u3057\u3066\u3044\u306A\u3044\u6587\u5B57\u30B3\u30F3\u30C6\u30F3\u30C4: \"{0}\"
xmlreader.ioException=XML\u30EA\u30FC\u30C0\u30FC\u30FB\u30A8\u30E9\u30FC: {0}
xmlreader.parseException=XML\u89E3\u6790\u30A8\u30E9\u30FC: {0}
xmlreader.nestedError=XML\u30EA\u30FC\u30C0\u30FC\u30FB\u30A8\u30E9\u30FC: {0}

xmlwriter.noPrefixForURI=XML\u30E9\u30A4\u30BF\u30FC\u30FB\u30A8\u30E9\u30FC: URI: \"{0}\"\u306E\u63A5\u982D\u8F9E\u304C\u3042\u308A\u307E\u305B\u3093
xmlwriter.ioException=XML\u30E9\u30A4\u30BF\u30FC\u30FB\u30A8\u30E9\u30FC: {0}
xmlwriter.nestedError=XML\u30E9\u30A4\u30BF\u30FC\u30FB\u30A8\u30E9\u30FC: {0}
xmlreader.unexpectedState=\u4E88\u671F\u3057\u3066\u3044\u306A\u3044XML\u30EA\u30FC\u30C0\u30FC\u306E\u72B6\u614B\u3002{0}\u304C\u4E88\u671F\u3055\u308C\u307E\u3057\u305F\u304C\u3001{1}\u304C\u898B\u3064\u304B\u308A\u307E\u3057\u305F
xmlreader.unexpectedState.message=\u4E88\u671F\u3057\u306A\u3044XML\u30EA\u30FC\u30C0\u30FC\u306E\u72B6\u614B\u3067\u3059\u3002{0}\u304C\u4E88\u671F\u3055\u308C\u307E\u3057\u305F\u304C\u3001{1}\u304C\u898B\u3064\u304B\u308A\u307E\u3057\u305F\u3002{2}
xmlreader.unexpectedState.tag=\u4E88\u671F\u3057\u306A\u3044XML\u30BF\u30B0\u3067\u3059\u3002{0}\u304C\u4E88\u671F\u3055\u308C\u307E\u3057\u305F\u304C\u3001{1}\u304C\u898B\u3064\u304B\u308A\u307E\u3057\u305F

xmlrecorder.recording.ended=\u8A18\u9332\u3055\u308C\u305F\u8981\u7D20\u306F\u3053\u308C\u4EE5\u4E0A\u3042\u308A\u307E\u305B\u3093

stax.cantCreate=StAX\u30EA\u30FC\u30C0\u30FC\u307E\u305F\u306F\u30E9\u30A4\u30BF\u30FC\u3092\u4F5C\u6210\u3067\u304D\u307E\u305B\u3093
staxreader.xmlstreamexception=XML\u30B9\u30C8\u30EA\u30FC\u30E0\u30FB\u30EA\u30FC\u30C0\u30FC\u306E\u4F8B\u5916: {0}

fastinfoset.decodingNotAccepted=Fast Infoset\u306B\u3088\u308B\u30C7\u30B3\u30FC\u30C7\u30A3\u30F3\u30B0\u306F\u53D7\u3051\u5165\u308C\u3089\u308C\u307E\u305B\u3093
fastinfoset.noImplementation=\u30AF\u30E9\u30B9\u30D1\u30B9\u306B\u3001Fast Infoset\u306E\u4E92\u63DB\u6027\u306E\u3042\u308B\u5B9F\u88C5\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093

sourcereader.invalidSource=\u30BD\u30FC\u30B9\"{0}\"\u304B\u3089\u30EA\u30FC\u30C0\u30FC\u3092\u4F5C\u6210\u3067\u304D\u307E\u305B\u3093
