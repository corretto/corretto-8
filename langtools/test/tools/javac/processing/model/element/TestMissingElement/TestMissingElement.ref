Round 1:
	input files: {ExpectInterfaces, ExpectSupertype, OK, InvalidSource}
	annotations: [ExpectSupertype, ExpectInterfaces]
	last round: false
check supertype: InvalidSource.TestClassMissingClassA -- !:empty clss A!
check supertype: InvalidSource.TestClassMissingClassAB -- !:empty clss (pkg A).B!
check supertype: InvalidSource.TestClassMissingClass_juA -- !:empty clss (pkg java.util).A!
check supertype: InvalidSource.TestClassTMissingClassAT -- !:empty clss A!<tvar T>
check interfaces: InvalidSource.TestClassMissingIntfA -- !:empty intf A!
check interfaces: InvalidSource.TestClassMissingIntfAB -- !:empty intf (pkg A).B!
check interfaces: InvalidSource.TestClassMissingIntfAOK -- !:empty intf A!, intf OK
check interfaces: InvalidSource.TestClassOKMissingIntfA -- intf OK, !:empty intf A!
check interfaces: InvalidSource.TestClassMissingIntfA_B -- !:empty intf A!, !:empty intf B!
check interfaces: InvalidSource.TestIntfMissingIntfA -- !:empty intf A!
check interfaces: InvalidSource.TestIntfMissingIntfAOK -- !:empty intf A!, intf OK
check interfaces: InvalidSource.TestIntfOKMissingIntfA -- intf OK, !:empty intf A!
check interfaces: InvalidSource.TestIntfMissingIntfAB -- !:empty intf A!, !:empty intf B!
check interfaces: InvalidSource.TestClassTMissingIntfAT -- !:empty intf A!<tvar T>
check interfaces: InvalidSource.TestClassTMissingIntfAT_B -- !:empty intf A!<tvar T>, !:empty intf B!
check interfaces: InvalidSource.TestIntfTMissingIntfAT -- !:empty intf A!<tvar T>
check interfaces: InvalidSource.TestIntfTMissingIntfAT_B -- !:empty intf A!<tvar T>, !:empty intf B!
check interfaces: InvalidSource.TestClassListMissingX -- intf (pkg java.util).List<!:empty clss X!>
Round 2:
	input files: {}
	annotations: []
	last round: true
InvalidSource.java:55:42: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:58:44: compiler.err.doesnt.exist: A
InvalidSource.java:61:54: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.package, java.util, null)
InvalidSource.java:64:47: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:67:44: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:70:46: compiler.err.doesnt.exist: A
InvalidSource.java:73:55: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:76:59: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:79:46: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:79:49: compiler.err.cant.resolve.location: kindname.class, B, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:82:44: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:85:46: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:88:50: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:91:45: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:91:48: compiler.err.cant.resolve.location: kindname.class, B, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:94:49: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:97:51: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:97:57: compiler.err.cant.resolve.location: kindname.class, B, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:100:49: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:103:51: compiler.err.cant.resolve.location: kindname.class, A, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:103:57: compiler.err.cant.resolve.location: kindname.class, B, , , (compiler.misc.location: kindname.class, InvalidSource, null)
InvalidSource.java:106:58: compiler.err.cant.resolve.location: kindname.class, X, , , (compiler.misc.location: kindname.class, InvalidSource, null)
22 errors