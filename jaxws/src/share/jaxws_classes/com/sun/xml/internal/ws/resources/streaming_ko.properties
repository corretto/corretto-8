#
# Copyright (c) 1997, 2012, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

streaming.ioException=XML \uAD6C\uBB38 \uBD84\uC11D \uC624\uB958: {0}
streaming.parseException=XML \uAD6C\uBB38 \uBD84\uC11D \uC624\uB958: {0}

xmlreader.illegalStateEncountered=XML \uC77D\uAE30 \uC7A5\uCE58 \uB0B4\uBD80 \uC624\uB958: \uC798\uBABB\uB41C \uC0C1\uD0DC({0})
xmlreader.unexpectedCharacterContent=XML \uC77D\uAE30 \uC7A5\uCE58 \uC624\uB958: \uC608\uC0C1\uCE58 \uC54A\uC740 \uBB38\uC790 \uCF58\uD150\uCE20: \"{0}\"
xmlreader.ioException=XML \uC77D\uAE30 \uC7A5\uCE58 \uC624\uB958: {0}
xmlreader.parseException=XML \uAD6C\uBB38 \uBD84\uC11D \uC624\uB958: {0}
xmlreader.nestedError=XML \uC77D\uAE30 \uC7A5\uCE58 \uC624\uB958: {0}

xmlwriter.noPrefixForURI=XML \uC4F0\uAE30 \uC7A5\uCE58 \uC624\uB958: URI\uC5D0 \uB300\uD55C \uC811\uB450\uC5B4 \uC5C6\uC74C: \"{0}\"
xmlwriter.ioException=XML \uC4F0\uAE30 \uC7A5\uCE58 \uC624\uB958: {0}
xmlwriter.nestedError=XML \uC4F0\uAE30 \uC7A5\uCE58 \uC624\uB958: {0}
xmlreader.unexpectedState=\uC608\uC0C1\uCE58 \uC54A\uC740 XML \uC77D\uAE30 \uC7A5\uCE58 \uC0C1\uD0DC\uC785\uB2C8\uB2E4. {0}\uC774(\uAC00) \uD544\uC694\uD558\uC9C0\uB9CC {1}\uC774(\uAC00) \uBC1C\uACAC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
xmlreader.unexpectedState.message=\uC608\uC0C1\uCE58 \uC54A\uC740 XML \uC77D\uAE30 \uC7A5\uCE58 \uC0C1\uD0DC\uC785\uB2C8\uB2E4. {0}\uC774(\uAC00) \uD544\uC694\uD558\uC9C0\uB9CC {1}\uC774(\uAC00) \uBC1C\uACAC\uB418\uC5C8\uC2B5\uB2C8\uB2E4. {2}
xmlreader.unexpectedState.tag=\uC608\uC0C1\uCE58 \uC54A\uC740 XML \uD0DC\uADF8\uC785\uB2C8\uB2E4. {0}\uC774(\uAC00) \uD544\uC694\uD558\uC9C0\uB9CC {1}\uC774(\uAC00) \uBC1C\uACAC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

xmlrecorder.recording.ended=\uB354 \uC774\uC0C1 \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uAE30\uB85D\uB41C \uC694\uC18C\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.

stax.cantCreate=StAX \uC77D\uAE30 \uC7A5\uCE58 \uB610\uB294 \uC4F0\uAE30 \uC7A5\uCE58\uB97C \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
staxreader.xmlstreamexception=XML \uC2A4\uD2B8\uB9BC \uC77D\uAE30 \uC7A5\uCE58 \uC608\uC678 \uC0AC\uD56D: {0}

fastinfoset.decodingNotAccepted=\uBE60\uB978 \uC815\uBCF4 \uC9D1\uD569 \uB514\uCF54\uB529\uC740 \uC2B9\uC778\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
fastinfoset.noImplementation=\uD074\uB798\uC2A4 \uACBD\uB85C\uC5D0\uC11C \uBE60\uB978 \uC815\uBCF4 \uC9D1\uD569\uC758 \uD638\uD658\uB418\uB294 \uAD6C\uD604\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

sourcereader.invalidSource=\"{0}\" \uC18C\uC2A4\uC5D0\uC11C \uC77D\uAE30 \uC7A5\uCE58\uB97C \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
